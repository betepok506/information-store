version: '3.8'

services:
  fastapi_server_information_store:
    # container_name: ${PROJECT_NAME}-fastapi-server
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    # command: "sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 3 --host 0.0.0.0 --port 8000'"
    command: "sh -c 'alembic upgrade head && gunicorn -w 3 -k uvicorn.workers.UvicornWorker backend.app.main:app  --bind 0.0.0.0:8000 --preload --log-level=debug --timeout 120'"
    volumes:
      - ./backend:/code
    expose:
      - 8000
    env_file: .env
    depends_on:
      - database_information_store
    links:
      - caddy_reverse_proxy_information_store:storage.localhost

  database_information_store:
    image: bitnami/postgresql
    restart: always
    # container_name: ${PROJECT_NAME}-database
    env_file: ".env"
    user: root
    volumes:
      - db_docker:/bitnami/postgresql
      - ./database/create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    ports:
      - 5454:5432 # Remove this on production
    expose:
      - 5432
    # environment:
    #   - POSTGRESQL_USERNAME=${DATABASE_USER}
    #   # - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
    #   # - POSTGRESQL_PASSWORD=postgres
    #   - POSTGRESQL_DATABASE=${DATABASE_NAME}

  redis_server_information_store:
    image: redis:alpine
    container_name: ${PROJECT_NAME}-redis-server    
    restart: always
    expose:
      - 6379
    env_file: .env

  celery_worker_information_store:
    # container_name: ${PROJECT_NAME}-celery-worker
    restart: always
    # platform: linux/arm64/v8
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: "watchfiles 'celery -A backend.app.core.celery worker -l info' "
    volumes:
      - ./backend:/code
      # - "${EB_LOG_BASE_DIR}/php-app:/var/log/celery"
    depends_on:
      - database_information_store
      - redis_server_information_store
    env_file: .env
  
  celery_beat_information_store:  #Good for crontab and schedule tasks
    # container_name: ${PROJECT_NAME}-celery-beat
    restart: always
    # platform: linux/arm64/v8
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      # args:
      #   INSTALL_DEV: ${INSTALL_DEV-false}
    command: celery -A backend.app.core.celery beat -l info -S celery_sqlalchemy_scheduler.schedulers:DatabaseScheduler -l info
    volumes:
      - ./backend:/code
      # - "${EB_LOG_BASE_DIR}/php-app:/var/log/celery-beat"
    depends_on:
      - database_information_store
      - redis_server_information_store
    env_file: .env

  dashboard_information_store:
    build: 
      context: ./flower
    command: celery --broker=redis://redis_server_information_store:6379/0 flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis_server_information_store://redis:6379/0
      - CELERY_RESULT_BACKEND=redis_server_information_store://redis:6379/0
    depends_on:
      - database
      - redis_server_information_store
      - celery_worker

  # minio_server:
  #   image: minio/minio:latest
  #   restart: always
  #   # container_name: minio_server
  #   volumes:
  #     - ./minio/data:/data
  #   expose:
  #     - 9000
  #     - 9091
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  #     MINIO_BROWSER_REDIRECT_URL: http://stash.localhost
  #   command: "server /data --console-address ':9090'"    

  caddy_reverse_proxy_information_store:
    # container_name: ${PROJECT_NAME}-caddy-reverse-proxy
    image: caddy:alpine
    restart: always
    ports:
      - 80:80      
      - 443:443
    environment:
      - EXT_ENDPOINT1=${EXT_ENDPOINT1}
      - LOCAL_1=${LOCAL_1}
      - LOCAL_2=${LOCAL_2}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./static:/code/static
      - caddy_data:/data
      - caddy_config:/config

volumes:
  db_docker:
  caddy_data:
  caddy_config: