version: '3.8'

services:
  fastapi_server:
    container_name: prod_fastapi_server_${PROJECT_NAME}
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    command: "sh -c 'alembic upgrade head && uvicorn backend.app.main:app --reload --workers 3 --host 0.0.0.0 --port 8000'"
    # command: "sh -c 'alembic upgrade head && gunicorn -w 3 -k uvicorn.workers.UvicornWorker backend.app.main:app  --bind 0.0.0.0:8000 --preload --log-level=debug --timeout 120  --capture-output --error-logfile -'"
    volumes:
      - ./backend:/code
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      database:
        condition: service_healthy
      elastic_search:
        condition: service_healthy

  database:
    image: bitnami/postgresql
    restart: always
    container_name: prod_database_${PROJECT_NAME}
    env_file: ".env"
    user: root
    volumes:
      - prod_db_docker_information_store:/bitnami/postgresql
      - ./database/create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    expose:
      - 5432
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  elastic_search:
    container_name: prod_elastic_search_${PROJECT_NAME}
    image: elasticsearch:8.17.2
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    expose:
      - 9200
      - 9300
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 15

volumes:
  prod_db_docker_information_store:
