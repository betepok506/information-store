"""empty message

Revision ID: be3e819eab6b
Revises: 
Create Date: 2025-02-17 09:38:47.190273

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = 'be3e819eab6b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Source',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Source_id'), 'Source', ['id'], unique=False)
    op.create_index(op.f('ix_Source_name'), 'Source', ['name'], unique=False)
    op.create_table('ProcessedUrls',
    sa.Column('suf_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('source_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['source_by_id'], ['Source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ProcessedUrls_hash'), 'ProcessedUrls', ['hash'], unique=False)
    op.create_index(op.f('ix_ProcessedUrls_id'), 'ProcessedUrls', ['id'], unique=False)
    op.create_index(op.f('ix_ProcessedUrls_suf_url'), 'ProcessedUrls', ['suf_url'], unique=False)
    op.create_table('TextData',
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('elastic_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processed_urls_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['processed_urls_by_id'], ['ProcessedUrls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_TextData_id'), 'TextData', ['id'], unique=False)
    op.create_index(op.f('ix_TextData_text'), 'TextData', ['text'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_TextData_text'), table_name='TextData')
    op.drop_index(op.f('ix_TextData_id'), table_name='TextData')
    op.drop_table('TextData')
    op.drop_index(op.f('ix_ProcessedUrls_suf_url'), table_name='ProcessedUrls')
    op.drop_index(op.f('ix_ProcessedUrls_id'), table_name='ProcessedUrls')
    op.drop_index(op.f('ix_ProcessedUrls_hash'), table_name='ProcessedUrls')
    op.drop_table('ProcessedUrls')
    op.drop_index(op.f('ix_Source_name'), table_name='Source')
    op.drop_index(op.f('ix_Source_id'), table_name='Source')
    op.drop_table('Source')
    # ### end Alembic commands ###
