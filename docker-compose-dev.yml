version: '3.8'

services:
  fastapi_server:
    container_name: fastapi_server_${PROJECT_NAME}
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    # command: "sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 3 --host 0.0.0.0 --port 8000'"
    #command: "sh -c 'alembic upgrade head && gunicorn -w 3 -k uvicorn.workers.UvicornWorker app.main:app  --bind 0.0.0.0:8000 --preload --log-level=debug --timeout 120'"
    volumes:
      - ./backend:/code
    ports:
      - 8001:8000
    env_file: .env
    depends_on:
      - database

  database:
    image: bitnami/postgresql
    restart: always
    container_name: database_${PROJECT_NAME}
    env_file: ".env"
    user: root
    volumes:
      - db_docker:/bitnami/postgresql
      - ./database/create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    ports:
      - 5454:5432 # Remove this on production
    expose:
      - 5432
    # environment:
    #   - POSTGRESQL_USERNAME=${DATABASE_USER}
    #   # - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
    #   # - POSTGRESQL_PASSWORD=postgres
    #   - POSTGRESQL_DATABASE=${DATABASE_NAME}

  elastic_search:
    container_name: elastic_search_${PROJECT_NAME}
    image: elasticsearch:8.17.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    # ports:
    #   - 9200:9200
    expose:
      - 9200
      - 9300

  redis_server:
    image: redis:alpine
    container_name: redis_server_${PROJECT_NAME}
    restart: always
    expose:
      - 6379
    env_file: .env

volumes:
  db_docker:
  caddy_data:
  caddy_config:
  